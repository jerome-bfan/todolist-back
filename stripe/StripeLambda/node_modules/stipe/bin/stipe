#!/usr/bin/env node
var path = require('path');
var extend = require('util')._extend;
var Stipe = require(__dirname + '/../index')

function printUsage() {
  console.log('Usage: stipe [opts]\n');
  console.log('  -m <dir match>');
  console.log('\nExamples:\n');
  console.log('  stipe -m /home/vmail/%s/mail\n')
}

function dieEmptyOpt(settings, opt, key) {
  if(!settings[key]) {
    console.log('Error: ' + key + ' (' + opt + ')');
    printUsage();
    process.exit(1);
  }
}

function parseClient(str) {
  if(str[0] === '.' || str[0] === '/') {
    return {unix: str};
  }

  var client = str.split(':');

  if(!client[0] || !client[1]) {
    return undefined;
  }

  var host = client[0],
      port = parseInt(client[1]);

  if(!port) {
    return undefined;
  }

  return {host: host, port: port}
}

function parseArgv(argv, defaults) {
  var settings = extend({}, defaults);

  if(!argv.length) {
    printUsage();
    process.exit(1);
  }

  for(var i = 0; i < argv.length; i++) {
    var opt = argv[i];

    switch(opt) {
      case '-d': settings.debug = true; break;
      case '-m': settings.match = argv[++i]; dieEmptyOpt(settings, '-m', 'match'); break;
      case '-c': settings.client = parseClient(argv[++i]); dieEmptyOpt(settings, '-c', 'client'); break;
      default: console.log('default:' + opt); break;
    }
  }

  return settings;
}

var settings = parseArgv(process.argv.slice(2), {
  debug: false,
  match: false,
})

settings.filter = function(file) {
  return true;
}

settings.attach = function(dir) {
  return true;
}

settings.trigger = function(event, callback) {
  console.log(event.file);
  callback(null, JSON.stringify(event.file));
}

var stipe = new Stipe(settings);
